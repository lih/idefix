on:
  workflow_call:
    inputs:
      TESTME_OPTIONS:
        required: true
        type: string
      IDEFIX_COMPILER:
        required: true
        type: string
      IDEFIX_RUNNER:
        required: true
        type: string

# concurrency:
#   # auto-cancel any concurrent job *in the same context*
#   # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
#   # see https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

env:
  IDEFIX_COMPILER: ${{ inputs.IDEFIX_COMPILER }}
  TESTME_OPTIONS: ${{ inputs.TESTME_OPTIONS }}
  PYTHONPATH: ${{ github.workspace }}
  IDEFIX_DIR: ${{ github.workspace }}

jobs:
  worker-checkout:
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Check out repo
        run: scripts/ci worker-checkout

  ShocksHydro:
    needs: worker-checkout
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Sod test
        run: scripts/ci run-tests test/HD/sod -all $TESTME_OPTIONS
      - name: Isothermal Sod test
        run: scripts/ci run-tests test/HD/sod-iso -all $TESTME_OPTIONS
      - name: Mach reflection test
        run: scripts/ci run-tests test/HD//MachReflection -all $TESTME_OPTIONS

  ParabolicHydro:
    needs: worker-checkout
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Viscous flow past cylinder
        run: scripts/ci run-tests test/HD/ViscousFlowPastCylinder -all $TESTME_OPTIONS
      - name: Viscous disk
        run: scripts/ci run-tests test/HD/ViscousDisk -all $TESTME_OPTIONS
      - name: Thermal diffusion
        run: scripts/ci run-tests test/HD/thermalDiffusion -all $TESTME_OPTIONS

  ShocksMHD:
    needs: worker-checkout
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: MHD Sod test
        run: scripts/ci run-tests test/MHD/sod -all $TESTME_OPTIONS
      - name: MHD Isothermal Sod test
        run: scripts/ci run-tests test/MHD/sod-iso -all $TESTME_OPTIONS
      - name: Orszag Tang
        run: scripts/ci run-tests test/MHD/OrszagTang -all $TESTME_OPTIONS
      - name: Orszag Tang 3D+restart tests
        run: scripts/ci run-tests test/MHD/OrszagTang3D -all $TESTME_OPTIONS

  ParabolicMHD:
    needs: worker-checkout
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Ambipolar C Shock
        run: scripts/ci run-tests test/MHD/AmbipolarCshock -all $TESTME_OPTIONS
      - name: Ambipolar C Shock 3D
        run: scripts/ci run-tests test/MHD/AmbipolarCshock3D -all $TESTME_OPTIONS
      - name: Resistive Alfv√©n wave
        run: scripts/ci run-tests test/MHD/ResistiveAlfvenWave -all $TESTME_OPTIONS
      - name: Grid coarsening diffusion
        run: scripts/ci run-tests test/MHD/Coarsening -all $TESTME_OPTIONS
      - name: Hall whistler waves
        run: scripts/ci run-tests test/MHD/HallWhistler -all $TESTME_OPTIONS

  Fargo:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Fargo + planet
        run: scripts/ci run-tests test/HD/FargoPlanet -all $TESTME_OPTIONS
      - name: Fargo MHD spherical
        run: scripts/ci run-tests test/MHD/FargoMHDSpherical -all $TESTME_OPTIONS

  ShearingBox:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Hydro shearing box
        run: scripts/ci run-tests test/HD/ShearingBox -all $TESTME_OPTIONS
      - name: MHD shearing box
        run: scripts/ci run-tests test/MHD/ShearingBox -all $TESTME_OPTIONS

  SelfGravity:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Jeans Instability
        run: scripts/ci run-tests test/SelfGravity/JeansInstability -all $TESTME_OPTIONS
      - name: Random sphere spherical
        run: scripts/ci run-tests test/SelfGravity/RandomSphere -all $TESTME_OPTIONS
      - name: Random sphere cartesian
        run: scripts/ci run-tests test/SelfGravity/RandomSphereCartesian -all $TESTME_OPTIONS
      - name: Uniform spherical collapse
        run: scripts/ci run-tests test/SelfGravity/UniformCollapse -all $TESTME_OPTIONS
      - name: Dusty spherical collapse
        run: scripts/ci run-tests test/SelfGravity/DustyCollapse -all $TESTME_OPTIONS

  Planet:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: 3 body
        run: scripts/ci run-tests test/Planet/Planet3Body -all $TESTME_OPTIONS
      - name: migration
        run: scripts/ci run-tests test/Planet/PlanetMigration2D -all $TESTME_OPTIONS
      - name: planet-planet
        run: scripts/ci run-tests test/Planet/PlanetPlanetRK42D -all $TESTME_OPTIONS
      - name: spiral wake
        run: scripts/ci run-tests test/Planet/PlanetSpiral2D -all $TESTME_OPTIONS
      - name: torques
        run: scripts/ci run-tests test/Planet/PlanetTorque3D -all $TESTME_OPTIONS
      - name: RK5
        run: scripts/ci run-tests test/Planet/PlanetsIsActiveRK52D -all $TESTME_OPTIONS

  Dust:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Energy conservation
        run: scripts/ci run-tests test/Dust/DustEnergy -all $TESTME_OPTIONS
      - name: Dusty wave
        run: scripts/ci run-tests test/Dust/DustyWave -all $TESTME_OPTIONS

  Braginskii:
    needs: [ShocksHydro, ParabolicHydro, ShocksMHD, ParabolicMHD]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: MTI
        run: scripts/ci run-tests test/MHD/MTI -all $TESTME_OPTIONS
      - name: Spherical anisotropic diffusion
        run: scripts/ci run-tests test/MHD/sphBragTDiffusion -all $TESTME_OPTIONS
      - name: Spherical anisotropic viscosity
        run: scripts/ci run-tests test/MHD/sphBragViscosity -all $TESTME_OPTIONS

  Examples:
    needs: [Fargo, Dust, Planet, ShearingBox, SelfGravity]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Run examples test
        run: scripts/ci check-examples $TEST_OPTIONS

  Utils:
    needs: [Fargo, Dust, Planet, ShearingBox, SelfGravity]
    runs-on: ${{ inputs.IDEFIX_RUNNER }}
    steps:
      - name: Lookup table
        run: scripts/ci run-tests test/utils/lookupTable -all $TESTME_OPTIONS
      - name: Dump Image
        run: scripts/ci run-tests test/utils/dumpImage -all $TESTME_OPTIONS
