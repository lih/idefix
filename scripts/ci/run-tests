#!/usr/bin/env bash
case "$IDEFIX_COMPILER" in
    icc)
        source /opt/intel/oneapi/setvars.sh;;
    
    gricad-*)
        function remote-tests() {
            # Le code de cette fonction s'éxécute sur le worker
            
            declare -p IDEFIX_COMPILER GITHUB_SHA

            if [ ! -e ".github-ci/$GITHUB_SHA" ]; then
                mkdir -p ".github-ci/$GITHUB_SHA"
                (
                    cd ".github-ci/$GITHUB_SHA"
                    git init
                    git remote add origin "https://github.com/$GITHUB_REPOSITORY"
                    git fetch origin "$GITHUB_SHA"
                    git reset --hard "$GITHUB_SHA"
                    git submodule update --init
                )
            fi

            cd ".github-ci/$GITHUB_SHA"
            export IDEFIX_DIR="$PWD"
            export PYTHONPATH="$PWD${PYTHONPATH+:}$PYTHONPATH"
            
            printf "Running tests : %s\n" "$*"
            (
                load-env
                cd "$1"
                ./testme.py "${@:2}"
            )
        }
        
        function run-tests() {
            # Le code de cette fonction s'éxécute sur le runner
            
            local -a args=( "$@" )
            local -a vars=( args IDEFIX_COMPILER GITHUB_SHA GITHUB_REPOSITORY )

            printf "Running jobs on remote workflow host\n"
            
            # Ce fichier fournit la fonction load-env, qui positionne
            # l'environnement adéquat pour l'éxécution d'Idefix sur le
            # worker
            source ~/load-env.sh
            
            ssh workflow "$(declare -p "${vars[@]}"); $(declare -f remote-tests load-env); "'remote-tests "${args[@]}"'
        }
    ;;

    *)
        function run-tests() {
            cd "$1"
            ./testme.py "${@:2}"
        }
        ;;
esac

set -ue
run-tests "$@"
